version : '3.7'
services:
        user-services:
                env_file: .env
                build: 
                  context: .
                  dockerfile: ./dockerfiles/django/Dockerfile
                  args:
                    dependencies: ${ENV}
                image: api
                command: /start
                depends_on:
                - postgres
                - rabbitmq
                restart: unless-stopped
                networks:
                - internal
                - kong-net
                ports:
                - ${DJANGO_PORT}:8000

        postgres:
                env_file: .env
                image: postgres:alpine
                volumes:
                - "persist_volume:/var/lib/postgresql/data"
                restart: unless-stopped
                healthcheck:
                  test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
                  interval: 30s
                  timeout: 30s
                  retries: 3
                networks:
                - internal

        rabbitmq:
                env_file: .env
                image: rabbitmq:3-management
                restart: unless-stopped
                networks:
                - internal

        celery:
                env_file: .env
                image: api
                command: celery -A config.celery_app worker -l info
                depends_on:
                - user-services
                - rabbitmq
                - postgres
                restart: unless-stopped
                networks:
                - internal
                - kong-net

volumes:
        persist_volume:
networks:
  internal:
  kong-net:
    external: true
