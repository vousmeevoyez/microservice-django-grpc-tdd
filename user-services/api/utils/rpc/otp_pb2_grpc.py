# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from api.utils.rpc import otp_pb2 as autogen_dot_otp__pb2


class OTPServicesStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.SendSMSOtp = channel.unary_unary(
            "/OTPServices/SendSMSOtp",
            request_serializer=autogen_dot_otp__pb2.SendSMSOtpRequest.SerializeToString,
            response_deserializer=autogen_dot_otp__pb2.SendSMSOtpResponse.FromString,
        )


class OTPServicesServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def SendSMSOtp(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_OTPServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "SendSMSOtp": grpc.unary_unary_rpc_method_handler(
            servicer.SendSMSOtp,
            request_deserializer=autogen_dot_otp__pb2.SendSMSOtpRequest.FromString,
            response_serializer=autogen_dot_otp__pb2.SendSMSOtpResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "OTPServices", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
